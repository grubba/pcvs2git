// -*- Pike -*-
//
// Configuration file for generating the AppLauncher-Windows Git repository
// from the AppLauncher-Windows CVS repository.
//
// 2013-01-11 Henrik Grubbström

inherit "BranchDir.pcvs2git";

array(string|array(string)) enter_directory(GitRepository git, string path,
					    array(string) files,
					    GitFlags flags, mapping state)
{
  m_delete(state, "flush");
  array(string|array(string)) res =
    ::enter_directory(git, path, files, flags, state);

  // The repository was restarted multiple times.
  switch(path) {
  case "2.1":
    state->flush = 1;
    break;

  case "2.1.1":
    git->add_root_commit(git->remote + "2.1.1");
    break;

  case "2.2":
    state->flush = 1;
    break;

  case "3.0":
    git->add_root_commit(git->remote + "2.2");
    break;
  }
  return res;
}

void leave_directory(GitRepository git, string path, array(string) files,
		     GitFlags flags, mapping state)
{
  // Unify the commits, to reduce confusion when other
  // branches are added.
  if (state->flush) {
    git_progress(flags, "\nFlushing branch %s...\n", git->master_branch);
    git->flush(flags);
    git_progress(flags, "\nContinuing import...\n");
    branch_order = ({});
  }
  if (!zero_type(state->orig_master)) {
    // Propagate deletions for permanently deleted files.
    // This is needed to keep filter_commits() happy futher down.
    switch(git->master_branch) {
    case "2.2":
      branch_dependancy(git, "2.1.1", "2.2", "2001.06.20.00.00.00");
      break;
    }
  }
  ::leave_directory(git, path, files, flags, state);
}

void repair_rcs_file(GitRepository git, string path, RCSFile rcs_file,
		     GitFlags flags)
{
  switch(path) {
  case "res/applaunch.ico":
  case "res/small.ico":
    if (git->master_branch == "2.1.1") {
      // These were lost in the 2.1.1 to 2.2 split.
      add_branch(rcs_file, "2.2", "1.2");
    }
    break;
  case "selectprogram.cpp":
  case "selectprogram.h":
    if (git->master_branch == "2.1.1") {
      // These were lost in the 2.1.1 to 2.2 split.
      add_branch(rcs_file, "2.2", "1.3");
    }
    break;

  case "install/script/Roxen Application Launcher 2.2.ipr":
    rename_revision(rcs_file,
		    "install/script/Roxen Application Launcher 2.1.1.ipr",
		    path, "1.3");
    break;

  case "AppicationLauncherSetup/AppicationLauncherSetup.vdproj":
    // This file was lost in the 3.0 to 3.1 split.
    append_revision(rcs_file, "3.1", UNDEFINED,
		    "2010.03.16.14.04.20", "noring",
		    "Removed unused files\n", "dead");
    break;
  }
  if (git->master_branch == "2.1") {
    // The 2.1.1 branch was started from scratch based on 2.1.
    simple_add_branch(rcs_file, "2.1.1", "2000.10.01.00.00.00");
  }
}

void create(GitRepository git, GitFlags flags)
{
  ::create(git, flags);

  string authors_file = combine_path(__FILE__, "../Pike-authors");
  if (Stdio.exist(authors_file)) {
    git->merge_authors(git->read_authors_file(authors_file));
  }

  authors_file = combine_path(__FILE__, "../Roxen-authors");
  if (Stdio.exist(authors_file)) {
    git->merge_authors(git->read_authors_file(authors_file));
  }

  string contributors_file = combine_path(__FILE__, "../Roxen-real-authors");
  if (Stdio.exist(contributors_file)) {
    git->read_contributors_file(contributors_file);
  }
}
