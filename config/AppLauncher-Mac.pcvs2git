// -*- Pike -*-
//
// Configuration file for generating the Git repository
// for Intraseek from its CVS repositories.
//
// 2013-01-04 Henrik Grubbström

inherit "BranchDir.pcvs2git";

void describe_rcs_file(GitRepository git, RCSFile rcs_file, string|void path)
{
  werror("Path: %O(%O) (master_branch: %O)\n"
	 "Head: %O branch: %O\n",
	 path||"", rcs_file->rcs_file_name, git->master_branch,
	 rcs_file->head, rcs_file->branch);
  array(RCSFile.Revision) revisions = values(rcs_file->revisions);
  sort(revisions->time->unix_time(), revisions);
  foreach(revisions, RCSFile.Revision rev) {
    if (rev->ancestor) {
      werror("  %s(%s):%s\t==> %s%s\n",
	     rev->revision, ctime(rev->time->unix_time()) - "\n",
	     rev->state, rev->ancestor,
	     (rev->revision_flags & GIT_REVISION_MERGE)?" (MERGE)":"");
    } else {
      werror("  %s(%s):%s\t==> NULL\n",
	     rev->revision, ctime(rev->time->unix_time()) - "\n", rev->state);
    }
  }
}

void repair_rcs_file(GitRepository git, string path, RCSFile rcs_file,
		     GitFlags flags)
{
  switch(path) {
  case "AppList.h":
    // Original name: "Apps.h".
    rename_revision(rcs_file, "Apps.h", path, "1.2");
    break;
  case "AppList.m":
    // Original name: "Apps.m".
    rename_revision(rcs_file, "Apps.m", path, "1.3");
    break;
  case "Session.h":
    // Original name: "Sessions.h".
    rename_revision(rcs_file, "Sessions.h", path, "1.8");
    break;
  case "Session.m":
    // Original name: "Sessions.m".
    rename_revision(rcs_file, "Sessions.m", path, "1.17");
    break;
  case "Sessions.mm":
    // Original name: "Sessions.m".
    rename_revision(rcs_file, "Sessions.m", path, "1.24");
    break;
  }

  if (git->master_branch == "4.1") {
    if (has_prefix(path, "English.lproj/") ||
	(has_prefix(path, "RoxenAppLauncher.xcodeproj/") &&
	 (path != "RoxenAppLauncher.xcodeproj/project.pbxproj"))) {
      // These were deleted in the 5.0 split.
      append_revision(rcs_file, "5.0", UNDEFINED,
		      "2008.11.09.14.36.06", "noring",
		      "First take on Roxen Application Launcher 5.0. Changes since 4.1:\n"
"\n"
		      "- Support for SSL (HTTPS) including self-signed certificates.\n"
		      "- Modern look and toolbar.\n"
		      "- New Preferences window.\n"
		      "- Drag-and-drop and click-to-edit i Preferences window.\n"
		      "- Icons for application and session files.\n"
		      "- Shortcut keys.\n"
		      "- Menu options.\n"
		      "- Localization.\n"
		      "- Improved session directory namning.\n"
		      "- Sessions are ordered latest session first.\n"
		      "- Support for application content type glob expressions.\n"
		      "- Debug log in Console.app compatible format.\n"
		      "- Deprecated Mac OS X 10.3 \"Pather\".\n"
		      "- Deprecated Mac Roman conversion (preferences are still valid).\n",
		      "dead");
    }
  }

  // Fixup some tags.
  string rev;

  if (rcs_file->tags["intraseek"] == "1.1.1.1") {
    rcs_file->tags["intraseek"] = "1.1.1";
    rcs_file->branch_heads["1.1.1"] = "1.1.1.1";
  }

  for (int i = 49; i < 103; i++) {
    rev = m_delete(rcs_file->tags, "roxen_1_2_" + i);
    if (rev) {
      rcs_file->tags["intraseek_1_2_" + i] = rev;
    }
  }

  for (int i = 103; i < 127; i++) {
    rev = m_delete(rcs_file->tags, "roxen_1_3_" + i);
    if (rev) {
      rcs_file->tags["intraseek_1_3_" + i] = rev;
    }
  }

  if (git->master_branch > "2.0") {
    for (int i = 108; i < 140; i++) {
      rev = m_delete(rcs_file->tags, "intraseek_2_0_" + i);
      if (rev) {
	rcs_file->tags["intraseek_2_1_" + i] = rev;
      }
    }
  }
}

GitRepository.GitCommit filter_commits(GitRepository git,
				       GitRepository.GitCommit commit,
				       RCSFile.Revision rev)
{
  GitRepository.GitCommit master =
    git->git_refs[git->remote + git->master_branch];
  // If the commit is already on our branch, keep it.
  if (master && (commit->leaves & master->is_leaf)) return commit;

  // Special case for commits on real cvs branches.
  if ((rev->revision != "1.1.1.1") &&
      (sizeof(rev->revision/".") > 2)) return commit;

  // If the commit isn't on our parent branch, refuse it.
  master = git->git_refs[git->remote + ([
    "4.1":"4.0",
    "4.2":"4.1",
    "5.0":"4.1",
  ])[git->master_branch]];
  if (master && !(commit->leaves & master->is_leaf)) return UNDEFINED;

#if 0
  // Force splits at appropriate points in time.
  switch (git->master_branch) {
  case "2.0":
    // .cvsignore:1.1
    // 2000.01.08.21.13.35
    if (commit->timestamp > 947366015) return UNDEFINED;
    break;
  default:
    break;
  }
#endif
  return commit;
}

void create(GitRepository git, GitFlags flags)
{
  ::create(git, flags);

  string authors_file = combine_path(__FILE__, "../Pike-authors");
  if (Stdio.exist(authors_file)) {
    git->merge_authors(git->read_authors_file(authors_file));
  }

  authors_file = combine_path(__FILE__, "../Roxen-authors");
  if (Stdio.exist(authors_file)) {
    git->merge_authors(git->read_authors_file(authors_file));
  }

  string contributors_file = combine_path(__FILE__, "../Intraseek-real-authors");
  if (Stdio.exist(contributors_file)) {
    git->read_contributors_file(contributors_file);
  }
}

